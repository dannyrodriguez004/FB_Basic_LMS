/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { HTTP_INTERCEPTORS } from '@angular/common/http';
import { Inject, Injectable, InjectionToken } from '@angular/core';
export const /** @type {?} */ PREFIX = new InjectionToken('prefix');
export class PrefixUrlInterceptor {
    /**
     * @param {?} prefix
     */
    constructor(prefix) {
        this.prefix = prefix;
    }
    /**
     * @param {?} req
     * @param {?} next
     * @return {?}
     */
    intercept(req, next) {
        return next.handle(req.clone({ url: this.prefix + req.url }));
    }
}
PrefixUrlInterceptor.decorators = [
    { type: Injectable },
];
/** @nocollapse */
PrefixUrlInterceptor.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [PREFIX,] },] },
];
function PrefixUrlInterceptor_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    PrefixUrlInterceptor.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    PrefixUrlInterceptor.ctorParameters;
    /** @type {?} */
    PrefixUrlInterceptor.prototype.prefix;
}
export const /** @type {?} */ PREFIX_URL_INTERCEPTOR_PROVIDER = {
    provide: HTTP_INTERCEPTORS,
    useClass: PrefixUrlInterceptor,
    multi: true
};
//# sourceMappingURL=prefix-url.interceptor.js.map
