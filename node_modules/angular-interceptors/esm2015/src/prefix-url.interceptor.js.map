{
  "version": 3,
  "file": "prefix-url.interceptor.js",
  "sources": [
    "ng://angular-interceptors/src/prefix-url.interceptor.ts"
  ],
  "sourcesContent": [
    "import {HTTP_INTERCEPTORS, HttpEvent, HttpHandler, HttpInterceptor} from '@angular/common/http';\r\nimport {HttpRequest} from '@angular/common/http';\r\nimport {Inject, Injectable, InjectionToken} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\n\r\nexport const PREFIX = new InjectionToken<string>('prefix');\r\n\r\n@Injectable()\r\nexport class PrefixUrlInterceptor implements HttpInterceptor {\r\n  constructor(@Inject(PREFIX) public prefix) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(req.clone({url: this.prefix + req.url}));\r\n  }\r\n}\r\n\r\nexport const PREFIX_URL_INTERCEPTOR_PROVIDER = {\r\n  provide: HTTP_INTERCEPTORS,\r\n  useClass: PrefixUrlInterceptor,\r\n  multi: true\r\n};\r\n"
  ],
  "names": [],
  "mappings": ";;;;AAAA,OAAO,EAAC,iBAAiB,EAA0C,MAAM,sBAAsB,CAAC;AAEhG,OAAO,EAAC,MAAM,EAAE,UAAU,EAAE,cAAc,EAAC,MAAM,eAAe,CAAC;AAGjE,MAAM,CAAC,uBAAM,MAAM,GAAG,IAAI,cAAc,CAAS,QAAQ,CAAC,CAAC;AAG3D,MAAM;;;;IACJ,YAAmC;QAAA,WAAM,GAAN,MAAM;KAAI;;;;;;IAE7C,SAAS,CAAC,GAAqB,EAAE,IAAiB;QAChD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC,GAAG,EAAE,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,EAAC,CAAC,CAAC,CAAC;KAC7D;;;YANF,UAAU;;;;4CAEI,MAAM,SAAC,MAAM;;;;;;;;;;;;;AAO5B,MAAM,CAAC,uBAAM,+BAA+B,GAAG;IAC7C,OAAO,EAAE,iBAAiB;IAC1B,QAAQ,EAAE,oBAAoB;IAC9B,KAAK,EAAE,IAAI;CACZ,CAAC"
}
