{
  "version": 3,
  "file": "angular-interceptors.js",
  "sources": [
    "ng://angular-interceptors/src/prefix-url.module.ts",
    "ng://angular-interceptors/src/prefix-url.interceptor.ts",
    "ng://angular-interceptors/src/ensure-https.module.ts",
    "ng://angular-interceptors/src/ensure-https.interceptor.ts",
    "ng://angular-interceptors/src/cache.module.ts",
    "ng://angular-interceptors/src/cache.interceptor.ts"
  ],
  "sourcesContent": [
    "import {ModuleWithProviders, NgModule} from '@angular/core';\r\nimport {PREFIX, PREFIX_URL_INTERCEPTOR_PROVIDER} from './prefix-url.interceptor';\r\nexport {PREFIX} from './prefix-url.interceptor';\r\n\r\n@NgModule()\r\nexport class PrefixUrlInterceptorModule {\r\n  /**\r\n   * Prefix HTTP request urls.\r\n   */\r\n  static forRoot(prefix: string): ModuleWithProviders {\r\n    return {\r\n      ngModule: PrefixUrlInterceptorModule,\r\n      providers: [PREFIX_URL_INTERCEPTOR_PROVIDER, {provide: PREFIX, useValue: prefix}]\r\n    };\r\n  }\r\n}\r\n",
    "import {HTTP_INTERCEPTORS, HttpEvent, HttpHandler, HttpInterceptor} from '@angular/common/http';\r\nimport {HttpRequest} from '@angular/common/http';\r\nimport {Inject, Injectable, InjectionToken} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\n\r\nexport const PREFIX = new InjectionToken<string>('prefix');\r\n\r\n@Injectable()\r\nexport class PrefixUrlInterceptor implements HttpInterceptor {\r\n  constructor(@Inject(PREFIX) public prefix) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(req.clone({url: this.prefix + req.url}));\r\n  }\r\n}\r\n\r\nexport const PREFIX_URL_INTERCEPTOR_PROVIDER = {\r\n  provide: HTTP_INTERCEPTORS,\r\n  useClass: PrefixUrlInterceptor,\r\n  multi: true\r\n};\r\n",
    "import {ModuleWithProviders, NgModule} from '@angular/core';\r\nimport {ENSURE_HTTPS_INTERCEPTOR_PROVIDER} from './ensure-https.interceptor';\r\n\r\n@NgModule()\r\nexport class EnsureHttpsInterceptorModule {\r\n  /**\r\n   * Change `http://` to `https://` in HTTP request urls.\r\n   */\r\n  static forRoot(): ModuleWithProviders {\r\n    return {ngModule: EnsureHttpsInterceptorModule, providers: [ENSURE_HTTPS_INTERCEPTOR_PROVIDER]};\r\n  }\r\n}\r\n",
    "import {HTTP_INTERCEPTORS, HttpEvent, HttpHandler, HttpInterceptor} from '@angular/common/http';\r\nimport {HttpRequest} from '@angular/common/http';\r\nimport {Injectable, InjectionToken} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Injectable()\r\nexport class EnsureHttpsInterceptor implements HttpInterceptor {\r\n  cache = new Map<string, Observable<HttpEvent<any>>>();\r\n\r\n  constructor() {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(req.clone({url: req.url.replace('http://', 'https://')}));\r\n  }\r\n}\r\n\r\nexport const ENSURE_HTTPS_INTERCEPTOR_PROVIDER = {\r\n  provide: HTTP_INTERCEPTORS,\r\n  useClass: EnsureHttpsInterceptor,\r\n  multi: true\r\n};\r\n",
    "import {InjectionToken, ModuleWithProviders, NgModule} from '@angular/core';\r\nimport {CACHE_INTERCEPTOR_PROVIDER, MAX_AGE_MS} from './cache.interceptor';\r\nexport {MAX_AGE_MS} from './cache.interceptor';\r\n\r\n@NgModule()\r\nexport class CacheInterceptorModule {\r\n  /**\r\n   * Cache all HTTP `GET` requests.\r\n   */\r\n  static forRoot(maxAgeMs: number = 5000): ModuleWithProviders {\r\n    return {\r\n      ngModule: CacheInterceptorModule,\r\n      providers: [CACHE_INTERCEPTOR_PROVIDER, {provide: MAX_AGE_MS, useValue: maxAgeMs}]\r\n    };\r\n  }\r\n}\r\n",
    "import {HTTP_INTERCEPTORS, HttpEvent, HttpHandler, HttpInterceptor} from '@angular/common/http';\r\nimport {HttpRequest} from '@angular/common/http';\r\nimport {Inject, Injectable, InjectionToken, Optional} from '@angular/core';\r\nimport {interval, Observable, throwError} from 'rxjs';\r\nimport {catchError, finalize, publishReplay, refCount, take} from 'rxjs/operators';\r\n\r\nexport const MAX_AGE_MS = new InjectionToken<string>('maxAgeMs');\r\n\r\n@Injectable()\r\nexport class CacheInterceptor implements HttpInterceptor {\r\n  cache = new Map<string, Observable<HttpEvent<any>>>();\r\n\r\n  constructor(@Inject(MAX_AGE_MS) @Optional() public maxAgeMs) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (!this.isCachable(req)) {\r\n      return next.handle(req);\r\n    }\r\n\r\n    const cachedResponse = this.cache.get(req.urlWithParams);\r\n    if (cachedResponse) {\r\n      return cachedResponse;\r\n    }\r\n\r\n    const obs$ = next.handle(req).pipe(\r\n        finalize(\r\n            () => interval(this.maxAgeMs)\r\n                      .pipe(take(1))\r\n                      .subscribe(() => this.cache.delete(req.urlWithParams))),\r\n        publishReplay(), refCount(), catchError(err => throwError(err)));\r\n    this.cache.set(req.urlWithParams, obs$);\r\n\r\n    return obs$;\r\n  }\r\n\r\n  private isCachable(req: HttpRequest<any>) {\r\n    return req.method === 'GET' && !req.headers.get('disable-cache');\r\n  }\r\n}\r\n\r\nexport const CACHE_INTERCEPTOR_PROVIDER = {\r\n  provide: HTTP_INTERCEPTORS,\r\n  useClass: CacheInterceptor,\r\n  multi: true\r\n};\r\n"
  ],
  "names": [],
  "mappings": "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"
}
