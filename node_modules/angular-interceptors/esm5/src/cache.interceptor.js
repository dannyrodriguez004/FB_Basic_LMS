/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { HTTP_INTERCEPTORS } from '@angular/common/http';
import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';
import { interval, throwError } from 'rxjs';
import { catchError, finalize, publishReplay, refCount, take } from 'rxjs/operators';
export var /** @type {?} */ MAX_AGE_MS = new InjectionToken('maxAgeMs');
var CacheInterceptor = /** @class */ (function () {
    /**
     * @param {?} maxAgeMs
     */
    function CacheInterceptor(maxAgeMs) {
        this.maxAgeMs = maxAgeMs;
        this.cache = new Map();
    }
    /**
     * @param {?} req
     * @param {?} next
     * @return {?}
     */
    CacheInterceptor.prototype.intercept = function (req, next) {
        var _this = this;
        if (!this.isCachable(req)) {
            return next.handle(req);
        }
        var /** @type {?} */ cachedResponse = this.cache.get(req.urlWithParams);
        if (cachedResponse) {
            return cachedResponse;
        }
        var /** @type {?} */ obs$ = next.handle(req).pipe(finalize(function () { return interval(_this.maxAgeMs)
            .pipe(take(1))
            .subscribe(function () { return _this.cache.delete(req.urlWithParams); }); }), publishReplay(), refCount(), catchError(function (err) { return throwError(err); }));
        this.cache.set(req.urlWithParams, obs$);
        return obs$;
    };
    /**
     * @param {?} req
     * @return {?}
     */
    CacheInterceptor.prototype.isCachable = function (req) {
        return req.method === 'GET' && !req.headers.get('disable-cache');
    };
    return CacheInterceptor;
}());
export { CacheInterceptor };
CacheInterceptor.decorators = [
    { type: Injectable },
];
/** @nocollapse */
CacheInterceptor.ctorParameters = function () { return [
    { type: undefined, decorators: [{ type: Inject, args: [MAX_AGE_MS,] }, { type: Optional },] },
]; };
function CacheInterceptor_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    CacheInterceptor.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    CacheInterceptor.ctorParameters;
    /** @type {?} */
    CacheInterceptor.prototype.cache;
    /** @type {?} */
    CacheInterceptor.prototype.maxAgeMs;
}
export var /** @type {?} */ CACHE_INTERCEPTOR_PROVIDER = {
    provide: HTTP_INTERCEPTORS,
    useClass: CacheInterceptor,
    multi: true
};
//# sourceMappingURL=cache.interceptor.js.map
